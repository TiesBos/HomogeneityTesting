
## With R 3.1.0 or later, you can uncomment the following line to tell R to
## enable compilation with C++11 (where available)
##
## Also, OpenMP support in Armadillo prefers C++11 support. However, for wider
## availability of the package we do not yet enforce this here.  It is however
## recommended for client packages to set it.
##
## And with R 3.4.0, and RcppArmadillo 0.7.960.*, we turn C++11 on as OpenMP
## support within Armadillo prefers / requires it
##
## R 4.0.0 made C++11 the default, R 4.1.0 switched to C++14, R 4.3.0 to C++17
## _In general_ we should no longer need to set a standard as any recent R
## installation will do the right thing. Should you need it, uncomment it and
## set the appropriate value, possibly CXX17.CXX_STD = CXX11

CC=/usr/local/opt/llvm/bin/clang
CXX=/usr/local/opt/llvm/bin/clang++
CXX11=/usr/local/opt/llvm/bin/clang++
CXX14=/usr/local/opt/llvm/bin/clang++
CXX17=/usr/local/opt/llvm/bin/clang++
LDFLAGS=-L/usr/local/opt/llvm/lib -L/usr/local/opt/libomp/lib
CPPFLAGS=-I/usr/local/opt/llvm/include -I/usr/local/opt/libomp/include

CXX_STD = CXX11
PKG_CXXFLAGS = $(SHLIB_OPENMP_CXXFLAGS)
PKG_LIBS = $(SHLIB_OPENMP_CXXFLAGS) -L$(R_HOME)/lib


##CC=/usr/local/opt/llvm/bin/clang
##CXX=/usr/local/opt/llvm/bin/clang++
##CXX11=/usr/local/opt/llvm/bin/clang++
##CXX14=/usr/local/opt/llvm/bin/clang++
##CXX17=/usr/local/opt/llvm/bin/clang++
##LDFLAGS=-L/usr/local/opt/llvm/lib
##CPPFLAGS=-I/usr/local/opt/llvm/include

##CXX_STD = CXX11
##PKG_CXXFLAGS = $(SHLIB_OPENMP_CXXFLAGS)
##PKG_LIBS = $(SHLIB_OPENMP_CXXFLAGS) -L$(R_HOME)/lib

##CC=/usr/local/opt/llvm/bin/clang
##CXX=/usr/local/opt/llvm/bin/clang++
##CXX11=/usr/local/opt/llvm/bin/clang++
##CXX14=/usr/local/opt/llvm/bin/clang++
##CXX17=/usr/local/opt/llvm/bin/clang++
##LDFLAGS=-L/usr/local/opt/llvm/lib
##CPPFLAGS=-I/usr/local/opt/llvm/include
##CXXFLAGS=-std=c++17 -Wall -O3 -march=native -fopenmp
##CXX_STD = CXX11